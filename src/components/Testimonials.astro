---
import { testimonials } from '../../content.json';
---

<section id='testimonials' class='h-screen py-24 md:py-32 bg-base-200'>
  <div class='container mx-auto px-6 lg:px-8'>
    <p class='badge badge-ghost mb-4 fade-up'>Testimonials</p>
    <h2 class='text-4xl md:text-5xl font-bold mb-16 fade-up text-base-content'>
      What People Say
    </h2>

    <!-- Avatar Row -->
    <div id='testimonial-avatars' class='flex justify-center gap-4 mb-12'>
      {
        testimonials.map((testimonial, idx) => (
          <button
            type='button'
            class={`testimonial-avatar w-12 h-12 rounded-full border-2 flex items-center justify-center bg-base-100 text-primary text-xl font-bold transition-all duration-300 focus:outline-none border-base-300 grayscale hover:grayscale-0 hover:scale-105`}
            aria-label={`Show testimonial from ${testimonial.name}`}
            tabindex='0'
            data-idx={idx}
          >
            <img
              src={testimonial.image}
              alt={testimonial.name}
              class='w-12 h-12 rounded-full object-cover'
            />
            <span class='sr-only'>{testimonial.name}</span>
          </button>
        ))
      }
    </div>

    <div class='relative w-full'>
      <div
        class='absolute inset-0 flex justify-between pointer-events-none z-10'
      >
        <div
          class='w-64 bg-gradient-to-r from-base-200 via-base-200/80 to-transparent'
        >
        </div>
        <div
          class='w-64 bg-gradient-to-l from-base-200 via-base-200/80 to-transparent'
        >
        </div>
      </div>
      <div
        id='testimonials-container'
        class='flex gap-16 md:gap-x-24 scroll-smooth overflow-hidden px-[calc(50%-300px)]'
      >
        {
          testimonials.map((testimonial, idx) => (
            <div
              class={`testimonial-card flex-shrink-0 w-full md:w-[600px] bg-base-100 rounded-xl p-8 shadow-xl transition-all duration-300 border border-transparent`}
              id={`testimonial-${idx}`}
              tabindex='0'
              aria-label={`Testimonial from ${testimonial.name}`}
              data-idx={idx}
            >
              <div class='flex items-center mb-6'>
                <div class='w-16 h-16 rounded-full bg-primary/10 flex items-center justify-center text-2xl font-bold text-primary'>
                  <img
                    src={testimonial.image}
                    alt={testimonial.name}
                    class='w-16 h-16 rounded-full object-cover'
                  />
                </div>
                <div class='ml-4'>
                  <h3 class='font-semibold text-lg text-base-content'>
                    {testimonial.name}
                  </h3>
                  <p class='text-sm text-base-content/70'>
                    {testimonial.position}
                  </p>
                </div>
              </div>
              <p class='text-base-content/80 text-sm leading-relaxed'>
                {testimonial.content}
              </p>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  import { horizontalLoop } from '../scripts/horizontalLoop';

  document.addEventListener('DOMContentLoaded', () => {
    // Initialize horizontalLoop for infinite horizontal scrolling
    horizontalLoop({
      containerId: '#testimonials-container',
      itemSelector: '.testimonial-card',
      loop: true,
      center: true,
      speed: 0.5,
      padded: true,
      paddingRight: 0,
    });

    const avatars = document.querySelectorAll('.testimonial-avatar');
    const cards = document.querySelectorAll('.testimonial-card');

    function setActive(idx: number) {
      avatars.forEach((el, i) => {
        el.classList.toggle('border-primary', i === idx);
        el.classList.toggle('ring-4', i === idx);
        el.classList.toggle('ring-primary/30', i === idx);
        el.classList.toggle('scale-110', i === idx);
        el.classList.toggle('grayscale', i !== idx);
      });
      cards.forEach((el, i) => {
        el.classList.toggle('border-primary', i === idx);
        el.classList.toggle('shadow-2xl', i === idx);
        el.classList.toggle('scale-105', i === idx);
        el.classList.toggle('opacity-70', i !== idx);
      });
    }

    avatars.forEach((el, idx) => {
      el.addEventListener('click', () => {
        setActive(idx);
        // Move the corresponding card to the front using horizontalLoop's API if available
        // @ts-ignore
        if (typeof window.horizontalLoopGoTo === 'function') {
          // @ts-ignore
          window.horizontalLoopGoTo(idx);
        } else {
          // fallback: scroll into view
          const card = document.getElementById(`testimonial-${idx}`);
          if (card) {
            card.scrollIntoView({
              behavior: 'smooth',
              inline: 'center',
              block: 'nearest',
            });
          }
        }
      });
    });

    // Set initial active
    setActive(0);
  });
</script>
