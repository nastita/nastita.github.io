---
import { testimonials } from '../../content.json';
---

<section id='kudos' class='py-24 md:py-32 bg-base-100'>
  <div class='container mx-auto px-4 sm:px-6 lg:px-8'>
    <!-- Section Header -->
    <header class='max-w-3xl mb-16 md:mb-24'>
      <p class='text-sm font-semibold uppercase tracking-wider text-base-content/70 mb-4'>
        Testimonials
      </p>
      <h2 class='text-4xl md:text-5xl font-bold tracking-tight mb-8 text-base-content'>
        What People Say
      </h2>
      <p class='text-lg text-base-content/80'>
        Feedback from colleagues and clients I've worked with.
      </p>
    </header>

    <!-- Avatar Navigation -->
    <div class='flex justify-center mb-8 sm:mb-12'>
      <div id='testimonial-avatars' class='flex gap-2 sm:gap-4 overflow-x-auto py-3 px-4 scroll-smooth' style='scrollbar-width: none; -ms-overflow-style: none;'>
        {
          testimonials.map((testimonial, idx) => (
            <button
              type='button'
              class={`testimonial-avatar w-12 h-12 sm:w-16 sm:h-16 rounded-full border-2 border-base-content/20 transition-all duration-300 focus:outline-none hover:border-primary hover:scale-105 flex-shrink-0 ${idx === 0 ? 'border-primary ring-4 ring-primary/30 scale-110' : 'grayscale'}`}
              aria-label={`Show testimonial from ${testimonial.name}`}
              data-idx={idx}
            >
              <img
                src={testimonial.image}
                alt={testimonial.name}
                class='w-12 h-12 sm:w-16 sm:h-16 rounded-full object-cover'
              />
            </button>
          ))
        }
      </div>
    </div>
    

    <!-- Single Testimonial Card -->
    <div class='flex justify-center'>
      <div class='max-w-4xl w-full'>
        {
          testimonials.map((testimonial, idx) => (
            <div
              class={`testimonial-card transition-all duration-500 ${idx === 0 ? 'block' : 'hidden'}`}
              id={`testimonial-${idx}`}
              data-idx={idx}
            >
              <div class='bg-base-200/50 backdrop-blur-sm rounded-xl p-4 sm:p-6 md:p-8 lg:p-12 shadow-sm hover:shadow-lg transition-all duration-300 border border-base-content/5 h-80 sm:h-96'>
                <div class='flex flex-col md:flex-row lg:flex-row gap-4 sm:gap-6 lg:gap-8 h-full'>
                  <!-- Avatar Info -->
                  <div class='md:w-1/3 lg:w-1/3 flex flex-col items-center md:items-start flex-shrink-0'>
                    <div class='mb-4 sm:mb-6'>
                      <img
                        src={testimonial.image}
                        alt={testimonial.name}
                        class='w-16 h-16 sm:w-20 sm:h-20 md:w-24 md:h-24 rounded-full object-cover shadow-lg'
                      />
                    </div>
                    <div class='text-center md:text-left space-y-2'>
                      <h3 class='text-lg sm:text-xl md:text-2xl font-bold text-base-content'>
                        {testimonial.name}
                      </h3>
                      <p class='text-xs sm:text-sm text-base-content/60'>
                        {testimonial.position}
                      </p>
                    </div>
                  </div>
                  
                  <!-- Testimonial Content -->
                  <div class='md:w-2/3 lg:w-2/3 text-center md:text-left flex-1 min-h-0'>
                    <div class='h-full overflow-y-auto pr-2'>
                      <blockquote class='text-base sm:text-lg md:text-xl text-base-content/90 leading-relaxed italic'>
                        "{testimonial.content}"
                      </blockquote>
                    </div>
                  </div>
                </div>
              </div>
            </div>
          ))
        }
      </div>
    </div>
  </div>
</section>

<script>
  document.addEventListener('DOMContentLoaded', () => {
    const avatars = document.querySelectorAll('.testimonial-avatar');
    const cards = document.querySelectorAll('.testimonial-card');

    function setActive(idx: number) {
      // Update avatars
      avatars.forEach((el, i) => {
        if (i === idx) {
          el.classList.add('border-primary', 'ring-4', 'ring-primary/30', 'scale-110');
          el.classList.remove('grayscale', 'border-base-content/20');
        } else {
          el.classList.remove('border-primary', 'ring-4', 'ring-primary/30', 'scale-110');
          el.classList.add('grayscale', 'border-base-content/20');
        }
      });

      // Update cards
      cards.forEach((el, i) => {
        if (i === idx) {
          el.classList.remove('hidden');
          el.classList.add('block');
        } else {
          el.classList.add('hidden');
          el.classList.remove('block');
        }
      });
    }

    // Handle avatar clicks
    avatars.forEach((el, idx) => {
      el.addEventListener('click', () => {
        setActive(idx);
      });
    });

    // Set initial active state
    setActive(0);
  });
</script>
