<header
  id='header'
  class='fixed top-0 left-0 w-full z-[100] bg-base-100/50 backdrop-blur-sm'
>
  <!-- Navigation Menu Button -->
  <div class='fixed top-0 right-0 px-4 md:px-8 py-4 md:py-8'>
    <div id='nav-container' class='relative z-[110]'>
      <button
        id='menu-toggle'
        class='btn btn-primary rounded-full normal-case text-base-100 font-monument-mono gap-2 relative z-[120]'
        aria-label='Toggle navigation'
        aria-expanded='false'
      >
        <span>Menu</span>
        <span class='relative w-3 h-3 transition'>
          <svg
            width='100%'
            height='100%'
            viewBox='0 0 13 8'
            fill='none'
            xmlns='http://www.w3.org/2000/svg'
          >
            <path
              fill-rule='evenodd'
              clip-rule='evenodd'
              d='M6.22656 5.53077L1.24775 0.551957L0.188427 1.61128L5.6969 7.11975L6.22656 7.63948L6.75622 7.11975L12.2647 1.61128L11.2054 0.551956L6.22656 5.53077Z'
              fill='currentColor'></path>
          </svg>
        </span>
      </button>

      <!-- Navigation Overlay -->
      <div
        id='nav-overlay'
        class='absolute w-80 h-auto bg-neutral rounded-3xl -top-2 -right-2 shadow-lg z-[115]'
      >
        <nav id='nav-menu' class='menu menu-lg w-full gap-2 px-6 pt-20 pb-8'>
          <div class='overflow-hidden'>
            <a
              href='#home'
              class='menu-item text-4xl font-medium tracking-tight nav-link hover:text-primary text-neutral-content'
              >HOME</a
            >
          </div>
          <div class='overflow-hidden'>
            <a
              href='#about'
              class='menu-item text-4xl font-medium tracking-tight nav-link hover:text-primary text-neutral-content'
              >ABOUT</a
            >
          </div>
          <div class='overflow-hidden'>
            <a
              href='#work'
              class='menu-item text-4xl font-medium tracking-tight nav-link hover:text-primary text-neutral-content'
              >WORK</a
            >
          </div>
          <div class='overflow-hidden'>
            <a
              href='#skills'
              class='menu-item text-4xl font-medium tracking-tight nav-link hover:text-primary text-neutral-content'
              >SKILLS</a
            >
          </div>
        </nav>
      </div>
    </div>
  </div>
</header>

<script>
  import gsap from 'gsap';
  import { ScrollTrigger } from 'gsap/ScrollTrigger';

  gsap.registerPlugin(ScrollTrigger);

  const header = document.getElementById('header');

  let lastScrollTop = 0;

  ScrollTrigger.create({
    start: 'top top',
    end: 'bottom bottom',
    markers: true,
    onUpdate: (self) => {
      const scrollTop =
        window.pageYOffset || document.documentElement.scrollTop;

      // Only trigger header animation if menu is closed
      if (!isMenuOpen) {
        if (scrollTop > lastScrollTop && scrollTop > 100) {
          // Scrolling down & past threshold
          gsap.to(header, {
            y: -100,
            duration: 0.3,
            ease: 'power2.out',
          });
        } else {
          // Scrolling up or at top
          gsap.to(header, {
            y: 0,
            duration: 0.3,
            ease: 'power2.out',
          });
        }
      }

      lastScrollTop = scrollTop;
    },
  });

  const menuToggle = document.getElementById('menu-toggle');
  const navOverlay = document.getElementById('nav-overlay');
  const navMenu = document.getElementById('nav-menu');
  const navLinks = document.querySelectorAll('.nav-link');

  if (!menuToggle || !navOverlay || !navMenu) {
    console.error('Required DOM elements not found');
    throw new Error('Required DOM elements not found');
  }

  const menuText = menuToggle.querySelector('span');
  const menuArrow = menuToggle.querySelector('svg');

  let isMenuOpen = false;

  // Initialize menu state
  gsap.set(navOverlay, {
    opacity: 0,
    pointerEvents: 'none',
    scale: 0.95,
  });

  gsap.set(navLinks, {
    opacity: 0,
    y: 20,
  });

  // Toggle menu function
  const toggleMenu = () => {
    isMenuOpen = !isMenuOpen;
    menuToggle.setAttribute('aria-expanded', String(isMenuOpen));

    if (isMenuOpen) {
      // Open menu animation
      gsap
        .timeline()
        .to(menuText, {
          opacity: 0,
          duration: 0.2,
        })
        .set(menuText, {
          text: 'Close',
        })
        .to(menuText, {
          opacity: 1,
          duration: 0.2,
        })
        .to(
          menuArrow,
          {
            rotation: 180,
            duration: 0.3,
          },
          '<'
        )
        .to(
          navOverlay,
          {
            opacity: 1,
            scale: 1,
            pointerEvents: 'auto',
            duration: 0.3,
            ease: 'power2.out',
          },
          '<'
        )
        .to(navLinks, {
          opacity: 1,
          y: 0,
          stagger: 0.05,
          duration: 0.3,
          ease: 'power2.out',
        });

      // Keep scroll enabled when menu is open
    } else {
      // Close menu animation
      gsap
        .timeline()
        .to(menuText, {
          opacity: 0,
          duration: 0.2,
        })
        .set(menuText, {
          text: 'Menu',
        })
        .to(menuText, {
          opacity: 1,
          duration: 0.2,
        })
        .to(
          menuArrow,
          {
            rotation: 0,
            duration: 0.3,
          },
          '<'
        )
        .to(
          navLinks,
          {
            opacity: 0,
            y: 20,
            stagger: 0.03,
            duration: 0.2,
          },
          '<'
        )
        .to(navOverlay, {
          opacity: 0,
          scale: 0.95,
          pointerEvents: 'none',
          duration: 0.3,
          ease: 'power2.in',
        });

      // Keep scroll enabled when menu is closed
    }
  };

  // Event Listeners
  menuToggle.addEventListener('click', toggleMenu);

  // Close menu when clicking outside
  document.addEventListener('click', (event) => {
    const target = event.target as Node;
    if (
      isMenuOpen &&
      !navMenu.contains(target) &&
      !menuToggle.contains(target)
    ) {
      toggleMenu();
    }
  });

  // Close menu on escape key
  document.addEventListener('keydown', (event) => {
    if (isMenuOpen && event.key === 'Escape') {
      toggleMenu();
    }
  });

  // Close menu on navigation
  navLinks.forEach((link) => {
    if (link.tagName === 'A') {
      link.addEventListener('click', () => {
        if (isMenuOpen) {
          toggleMenu();
        }
      });
    }
  });
</script>
